class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> ans;
        for(int i = 0; i < nums.size(); i++){
            auto it = find(nums.begin(), nums.end(), target - nums[i]);
            if(it != nums.end() && (it - nums.begin() != i)){
                ans.push_back(i);
                ans.push_back(it - nums.begin());
                return ans;
            }
        }
    return ans;
    }
};

Runtime: 92 ms, faster than 32.76% of C++ online submissions for Two Sum.
Memory Usage: 10.2 MB, less than 77.96% of C++ online submissions for Two Sum.

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> ans;
        unordered_map<int, int> umap;
        for(int i = 0; i < nums.size(); i++){
            if(umap.find(target - nums[i]) != umap.end()){
                ans.push_back(umap[target - nums[i]]);
                ans.push_back(i);
            }
            umap[nums[i]] = i;
        }
    return ans;
    }
};

Runtime: 12 ms, faster than 74.35% of C++ online submissions for Two Sum.
Memory Usage: 11.9 MB, less than 17.35% of C++ online submissions for Two Sum.
